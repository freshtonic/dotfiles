#!/usr/bin/env ruby

# Look at the modified and untracked files in a Git repo and open them in vim.
# If there are no modified or untracked files, open all of the files that were
# touched by the very last commit.
#
def vim(files)
  files = remove_binaries(files)
  command = "vim -p #{files.map{|f| "'#{f.strip}'"}.join(" ")}"
  exec(command)
end

def remove_binaries(files)
  files.select do |f|
    `file -i -b #{f}`.strip =~ /text/
  end
end

if !File.exists?("#{Dir.pwd}/.git")
  $stderr.puts "not in a Git repository"
  exit 1
end

# Get the list of modified and untracked files
files = `git ls-files -m -o -t --exclude-standard | egrep "^(\?|C)" | awk '{print $2}'`

if files.length > 0
  vim(files)
else
  # There are no changed or modified files, so open
  # all files in last commit by me.
  latest_commit_by_me = `git log --no-color --pretty=oneline --author=$(git config --get user.email) | head -n1 | awk '{print $1}'`.strip
  if latest_commit_by_me != ""
    files = `git diff-tree #{latest_commit_by_me} --name-only -r`
    file = files[1..-1] # remove the first line as it's just the SHA1 of the commit
    vim(files)
  end
end





